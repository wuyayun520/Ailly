name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/ailly.ipa"
          APPLE_ID: "gongjie@pooletruckingser.shop"
          APP_SPECIFIC_PASSWORD: "xbzm-zcyv-pxxd-clvs"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
